<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-DC8BND6A" failures="0" tests="5" name="Default test" time="0.478" errors="0" timestamp="2023-02-02T22:27:54 GMT-05:00">
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initSetup" time="0.005">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.openqa.selenium.WebDriver.manage()&amp;quot; because &amp;quot;basePackage.BaseHRClass.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.manage()" because "basePackage.BaseHRClass.driver" is null
at basePackage.BaseHRClass.initiate(BaseHRClass.java:41)
at testLayer.LoginTest.initSetup(LoginTest.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initSetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initSetup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod initSetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initSetup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod initSetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initSetup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod initSetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="@BeforeMethod initSetup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod initSetup -->
  <testcase classname="testLayer.LoginTest" name="@AfterMethod close" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="testLayer.LoginTest" name="Title" time="0.0">
    <skipped/>
  </testcase> <!-- Title -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
  <testcase classname="testLayer.LoginTest" name="Login" time="0.0">
    <skipped/>
  </testcase> <!-- Login -->
</testsuite> <!-- Default test -->
